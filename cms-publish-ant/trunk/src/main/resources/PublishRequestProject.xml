<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2009-2013 Simonsoft Nordic AB

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project name="PublishRequest"  basedir="." default="publishreport">
  
	<taskdef name="publishrequest" classname="se.simonsoft.cms.publish.ant.PublishRequestPETask"/>
	<taskdef name="publishreport" classname="se.simonsoft.cms.publish.ant.tasks.ErrorReportTask"/>
	<!-- Support for antcontrib. Must be present in Ant Lib or otherwise specified by classpath -->
	<taskdef resource="net/sf/antcontrib/antlib.xml"/>
	
    <!-- Some default properties -->
   	<property name="lang" value="en-US"/>
   	<property name="param.file-type" value="xml"/> 	<!-- We will basically always use xml as input format -->
   	<property name="param.queue-priority" value="4"/> <!-- We use a lower priority so other requests should be able to pass -->
	<property name="outputfolder" value="export"/>
	<property name="e3defaultfilename" value="e3out.xml"/>

	<target name="publish" description="Publish an item">
		
	   	<publishrequest outputfolder="${outputfolder}">
			
			<!-- Should perhaps also have config for port and uri -->
	   	   <configs>
	   	   		<config name="host" value="${config.host}"/>
	   	   </configs>
	   	   
	   	   <jobs>
		   		<!-- Each job specifies the params for a publish request -->
		   	    
		   	   	<job filename="${filename}" zipoutput="${zipoutput}" rootfilename="${zip-root-filename}">
		   	    	<params>
			   	       	<param name="profile" value="${param.profile}"/>
			   	       	<param name="app-config" value="${param.app-config}"/>
			   	       	<param name="stylesheet" value="${param.stylesheet}"/>
			   	       	<param name="file" value="${param.file}"/>
			   	       	<param name="file-type" value="${param.file-type}"/>
		   	     		<param name="zip-output" value="${param.zip-output}"/>
		   	     		<param name="zip-graph-dir" value="${param.zip-graph-dir}"/>
		   	     		<param name="graphic-transform" value="${param.graphic-transform}"/>
			   	       	<param name="type" value="${param.type}"/>
			   	       	<param name="queue-priority" value="${param.queue-priority}"/>
		   	   		</params>
		   	   	</job>
	   	   	</jobs>
	   	</publishrequest>
	   
	</target>
	
	   	   		
	<target name="unarchive" if="${param.zip-output}">
		<unzip src="${outputfolder}/${filename}" dest="${filename}"/>
	</target>
			
	<target name="performtransform">
		<xslt style="techdoc_to_machine.xsl" in="${filename}/${e3defaultfilename}" out="${filename}/project.xml"/>
		<delete file="${filename}/${e3defaultfilename}"/>
	</target>
				
	<target name="archive" if="${zipoutput}">
		<tar basedir="${filename}" dest="${filename}"/>
	</target>
			
	<target name="cleanup">
	
	</target>		
				
	<target name="publishreport" depends="publish, unarchive, performtransform, archive">
	     <publishreport/>
	</target>

</project>