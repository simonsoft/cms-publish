<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2009-2017 Simonsoft Nordic AB

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project name="PublishCatalogue"  basedir="." default="publish" >
   	
   <!--  <stopwatch name="timer"/> -->
   
	<taskdef name="publishrequest" classname="se.simonsoft.cms.publish.ant.tasks.PublishJobsTask"/>
	<taskdef name="publishreport" classname="se.simonsoft.cms.publish.ant.tasks.ErrorReportTask"/>
	
	<!-- Support for antcontrib. Must be present in Ant Lib or otherwise specified by classpath -->
	<taskdef resource="net/sf/antcontrib/antlib.xml"/>
	
   	<property name="param.file-type" value="xml"/> 	<!-- We will basically always use xml as input format -->
	<property name="param.queue-priority" value="4"/> <!-- We use a lower priority so other requests should be able to pass -->
	
	<!-- New target that parses the response. And then call on publish for each result item using Rhino. -->
	
	<target name="publish" description="Publish an item">
		
	   	<publishrequest publishservice="${publishservice}" outputfolder="export">
			
			<!-- Should perhaps also have config for port and uri -->
	   	   <configs>
	   	     <config name="host" value="${config.host}"/>
	   	   </configs>
	   	   
	   	   <jobs>
	   	       <!-- Each job specifies the params for a publish request -->
	   	      <!--   <job profile="${param.profile}" appconfig="${param.app-config}" stylesheet="$aptpath/application/se.simonsoft.flir/doctypes/FLIR/flir_technote_A4.style" type="pdf" file="${param.file}" filetype="${param.file-type}"/>-->
	   	    
	   	      <job filename="Catalog_A4.pdf">
	   	      	<params>
		   	       	<param name="profile" value="logicalexpression=&lt;ProfileRef alias=&quot;Features&quot; value=&quot;External&quot;/&gt;"/>
		   	       	<param name="app-config" value="$aptpath/application/se.simonsoft.flir/app/standard.3sppdf"/>
		   	       	<param name="stylesheet" value="$aptpath/application/se.simonsoft.flir/doctypes/FLIR/prod_catalog_A4.style"/>
		   	       	<param name="file" value="${file}"/>
		   	       	<param name="file-type" value="${param.file-type}"/>
		   	       	<param name="type" value="pdf"/>
		   	       	<param name="queue-priority" value="${param.queue-priority}"/>
	   	   		</params>
	   	   	</job>
	   	   	<job filename="Catalog_USL.pdf" >
	   	      	<params>
		   	       	<param name="profile" value="logicalexpression=&lt;ProfileRef alias=&quot;Features&quot; value=&quot;External&quot;/&gt;"/>
		   	       	<param name="app-config" value="$aptpath/application/se.simonsoft.flir/app/standard.3sppdf"/>
		   	       	<param name="stylesheet" value="$aptpath/application/se.simonsoft.flir/doctypes/FLIR/prod_catalog_letter.style"/>
		   	       	<param name="file" value="${file}"/>
		   	       	<param name="file-type" value="${param.file-type}"/>
		   	       	<param name="type" value="pdf"/>
		   	       	<param name="queue-priority" value="${param.queue-priority}"/>
	   	   		</params>
	   	   	</job>
	   	 
	   	   </jobs>
	   	</publishrequest>
	   	
	   	<!-- Get error report before copying -->
		<publishreport/>
		
	   	<copy todir="${copytodir}" overwrite="true" force="true">
	    	<resources>
	      		<file file="export/Catalog_A4.pdf"/>
	      		<file file="export/Catalog_USL.pdf"/>
	    	</resources>
 		 </copy>
 		 
	   <!-- <stopwatch name="timer" action="elapsed"/>  -->
	</target>	
</project>